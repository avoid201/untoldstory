#!/usr/bin/env python3
"""
TMX Map Loading Initialization
L√§dt TMX-Tilesets beim Start des Spiels
"""

from pathlib import Path
from engine.graphics.sprite_manager import SpriteManager


def initialize_tmx_support():
    """
    Initialisiert TMX-Support durch Vorladen aller Tilesets
    WICHTIG: L√§dt nur player_house.tmx um GID-Konflikte zu vermeiden!
    """
    sprite_manager = SpriteManager.get()
    
    # WICHTIG: Erst sicherstellen dass die GID-Mappings leer sind
    sprite_manager.gid_to_surface = {}
    sprite_manager._loaded_tilesets = set()
    
    # TEMPOR√ÑR: Lade NUR player_house.tmx um Konflikte zu vermeiden
    # TODO: Sp√§ter muss das pro Map gel√∂st werden
    tmx_file = Path("data/maps/player_house.tmx")
    
    print(f"üó∫Ô∏è Initialisiere TMX-Support f√ºr player_house...")
    
    try:
        print(f"  üìã Lade Tilesets f√ºr: {tmx_file.name}")
        sprite_manager.load_tmx_tilesets(tmx_file)
    except Exception as e:
        print(f"  ‚ö†Ô∏è Fehler beim Laden von {tmx_file.name}: {e}")
        import traceback
        traceback.print_exc()
    
    # Zeige geladene GIDs
    if hasattr(sprite_manager, 'gid_to_surface'):
        gid_count = len(sprite_manager.gid_to_surface)
        print(f"‚úÖ TMX-Support initialisiert: {gid_count} GIDs geladen")
        
        # Debug: Zeige erste paar GIDs
        sorted_gids = sorted(sprite_manager.gid_to_surface.keys())[:10]
        if sorted_gids:
            print(f"   Beispiel-GIDs: {sorted_gids}")
    
    return sprite_manager


if __name__ == "__main__":
    # Test
    initialize_tmx_support()
